var version="v1.0.8:",theme_path="wp-content/themes/justmarkup.com/",offlineFundamentals=["./",theme_path+"dist/js/head.min.js",theme_path+"offline.html"],updateStaticCache=function(){return caches.open(version+"fundamentals").then(function(a){return Promise.all(offlineFundamentals.map(function(b){var c=new Request(b),d=new URL(c.url);return d.origin!=location.origin&&(c=new Request(b,{mode:"no-cors"})),fetch(c).then(function(b){var d=b.clone();return a.put(c,d)})}))})},clearOldCaches=function(){return caches.keys().then(function(a){return Promise.all(a.filter(function(a){return 0!=a.indexOf(version)}).map(function(a){return caches["delete"](a)}))})},limitCache=function(a,b){a.keys().then(function(c){c.length>b&&a["delete"](c[0])})},trimCache=function(a,b){caches.open(a).then(function(c){c.keys().then(function(d){d.length>b&&c["delete"](d[0]).then(trimCache(a,b))})})};self.addEventListener("install",function(a){a.waitUntil(updateStaticCache().then(function(){return self.skipWaiting()}))}),self.addEventListener("message",function(a){var b=a.data;"trimCache"==b.command&&(trimCache(version+"pages",25),trimCache(version+"images",10),trimCache(version+"assets",30))}),self.addEventListener("fetch",function(a){var b=function(b){var c=b.clone();return-1!=a.request.headers.get("Accept").indexOf("text/html")?caches.open(version+"pages").then(function(b){b.put(a.request,c).then(function(){limitCache(b,25)})}):-1!=a.request.headers.get("Accept").indexOf("image")?caches.open(version+"images").then(function(b){b.put(a.request,c).then(function(){limitCache(b,10)})}):caches.open(version+"assets").then(function(b){b.put(a.request,c)}),b},c=function(){return-1!=a.request.headers.get("Accept").indexOf("text/html")?caches.match(a.request).then(function(a){return a||caches.match(theme_path+"offline.html")}):void 0};return a.request.url.match(/wp-admin/)||a.request.url.match(/preview=true/)||"GET"!=a.request.method?void 0:-1!=a.request.headers.get("Accept").indexOf("text/html")?void a.respondWith(fetch(a.request).then(b,c)):void a.respondWith(caches.match(a.request).then(function(d){return d||fetch(a.request).then(b,c)}))}),self.addEventListener("activate",function(a){a.waitUntil(clearOldCaches().then(function(){return self.clients.claim()}))});